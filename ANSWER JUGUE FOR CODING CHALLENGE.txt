QI) Find the Contiguous Subarray with Sum to a Given Value in an array.

Answer)

public class subarray {

	static void ContiguousSubarraySum(int arr[], int sum) {
		 int newsum;
		 for (int i = 0; i < arr.length; i++) {
		 newsum = arr[i];
		
		 for (int l = i + 1; l <= arr.length; l++) {
		 if (newsum == sum) {
		 int lastindex = l - 1;
		 System.out.println("Sum found between index " + i + " to " + lastindex);
		 System.out.println("Elements are ");
		 for (int m = i; m <= lastindex; m++) {
			
			 System.out.print(arr[m]+" ");
		 }
		 return;
		 }
		 if (newsum > sum || l == arr.length)
		 break;
		 newsum = newsum + arr[l];
		 }
		 }
		 
		 System.out.println("No subarray found");
		 return;
		 }
	
	public static void main(String[] args) {
	
		 int arr[] = {14, 12, 70, 15, 99, 65, 21, 90};
	       
	        int sum = 97;
	        
	        ContiguousSubarraySum(arr, sum);
	              


	}

}


QII) Get the Longest common prefix in String array

Answer)
public class LongestCommonPrefix {

	 public static String ShortString(String[] Arr)
	 {
	 String Short=Arr[0];
	 for(int i=1;i<Arr.length;i++){
	 if(Arr[i].length()<Short.length())
		 Short=Arr[i];
	 }
	 return Short;
	 }
	 
	 public static String LongestPrefix(String[] Arr) {
		 if(Arr.length==0) return "";
		
		 String Short=ShortString(Arr);
		 
		 int Shortlenght=Short.length();
		 for(int i=0;i<Arr.length;i++){
		 int j;
		 for( j=0;j<Shortlenght;j++){
		 if(Short.charAt(j)!=Arr[i].charAt(j))
		 break;
		 }
		 if(j<Shortlenght)
			 Shortlenght=j;
		 }
		 return Short.substring(0,Shortlenght);
		 }
	
	public static void main(String[] args) {
		 
		String[] Arr={"java2blog","javaworld","javabean","javatemp"};
		 String longestPrefix=LongestPrefix(Arr);
		
		 System.out.println("Longest common prefix in above String array is "+longestPrefix);

	}

}


